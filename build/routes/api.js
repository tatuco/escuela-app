"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const checkJwt_1 = require("../middlewares/checkJwt");
const checkRole_1 = require("../middlewares/checkRole");
const User_1 = require("../entity/User");
const ParamController_1 = require("../controllers/ParamController");
const ScheduleController_1 = require("../controllers/ScheduleController");
const MenuController_1 = require("../controllers/MenuController");
const GradeController_1 = require("../controllers/GradeController");
const NoteController_1 = require("../controllers/NoteController");
const NoticeController_1 = require("../controllers/NoticeController");
const FileController_1 = require("../controllers/FileController");
const CourseController_1 = require("../controllers/CourseController");
const HistoryController_1 = require("../controllers/HistoryController");
const router = express_1.Router();
exports.default = router;
router.get("/params", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN])], ParamController_1.default.index);
router.post("/params", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN])], ParamController_1.default.store);
router.put("/params/:id", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN])], ParamController_1.default.update);
router.delete("/params/:id", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN])], ParamController_1.default.destroy);
router.get("/schedules", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT])], ScheduleController_1.ScheduleController.index);
router.put("/schedules/:id", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.TEACHER])], ScheduleController_1.ScheduleController.update);
router.get("/menus", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], MenuController_1.MenuController.index);
router.put("/menus/:id", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.TEACHER])], MenuController_1.MenuController.update);
router.get("/grades", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], GradeController_1.GradeController.index);
router.put("/grades/:id", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.TEACHER])], GradeController_1.GradeController.update);
router.get("/courses", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], CourseController_1.CourseController.index);
router.post("/courses", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.TEACHER])], CourseController_1.CourseController.store);
router.put("/courses/:id", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.TEACHER])], CourseController_1.CourseController.update);
router.get("/notes", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], NoteController_1.NoteController.index);
router.post("/notes", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], NoteController_1.NoteController.store);
router.put("/notes/:id", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], NoteController_1.NoteController.update);
router.get("/notices", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], NoticeController_1.NoticeController.index);
router.post("/notices", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], NoticeController_1.NoticeController.store);
router.put("/notices/:id", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], NoticeController_1.NoticeController.update);
router.get("/files", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], FileController_1.FileController.index);
router.post("/files", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.TEACHER])], FileController_1.FileController.store);
router.delete("/files/:id", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN])], FileController_1.FileController.destroy);
router.get("/history", [checkJwt_1.checkJwt, checkRole_1.checkRole([User_1.Roles.ADMIN, User_1.Roles.STUDENT, User_1.Roles.TEACHER])], HistoryController_1.HistoryController.index);
//# sourceMappingURL=api.js.map